name: Deploy to EC2

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Remove existing directory
            [ -d "/home/ubuntu/ondc-mock-server" ] && rm -rf /home/ubuntu/ondc-mock-server
            
            # Fresh clone
            git clone https://github.com/ONDC-Official/ondc-mock-server.git /home/ubuntu/ondc-mock-server
            cd /home/ubuntu/ondc-mock-server
            
            # Rename docker compose file
            mv docker-compose.server.yml docker-compose.yml
            

            # Create backend .env file
            cat > .env << EOL
            PORT=${{ secrets.PORT }}
            REDIS_PORT=${{ secrets.REDIS_PORT }}
            REDIS_PASSWORD=${{ secrets.REDIS_PASSWORD }}
            REDIS_HOST=${{ secrets.REDIS_HOST }}
            SANDBOX_MODE=${{ secrets.SANDBOX_MODE }}
            RATE_LIMIT_MODE=${{ secrets.RATE_LIMIT_MODE }}
            RATE_LIMIT_24HR=${{ secrets.RATE_LIMIT_24HR }}
            PRIVATE_KEY=${{ secrets.PRIVATE_KEY }}
            UNIQUE_KEY=${{ secrets.UNIQUE_KEY }}
            SUBSCRIBER_ID=${{ secrets.SUBSCRIBER_ID }}
            DATABASE_URL=${{ secrets.DATABASE_URL }}
            POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            NODE_OPTIONS=${{ secrets.NODE_OPTIONS }}
            EOL

            # Create frontend .env file
            cat > apps/frontend/.env << EOL
            VITE_SERVER_URL=${{ secrets.VITE_SERVER_URL }}
            MOCKSERVER_ID=${{ secrets.MOCKSERVER_ID }}
            EOL
            
            
            # Build and deploy
            docker-compose down
            docker-compose build
            docker-compose up -d
            
            # Cleanup
            docker system prune -af
            docker volume prune -f
